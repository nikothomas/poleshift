exports.id = "node_modules_formdata-node_lib_esm_fileFromPath_js";
exports.ids = ["node_modules_formdata-node_lib_esm_fileFromPath_js"];
exports.modules = {

/***/ "./node_modules/node-domexception/index.js":
/*!*************************************************!*\
  !*** ./node_modules/node-domexception/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*! node-domexception. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */

if (!globalThis.DOMException) {
  try {
    const { MessageChannel } = __webpack_require__(/*! worker_threads */ "worker_threads"),
    port = new MessageChannel().port1,
    ab = new ArrayBuffer()
    port.postMessage(ab, [ab, ab])
  } catch (err) {
    err.constructor.name === 'DOMException' && (
      globalThis.DOMException = err.constructor
    )
  }
}

module.exports = globalThis.DOMException


/***/ }),

/***/ "./node_modules/formdata-node/lib/esm/fileFromPath.js":
/*!************************************************************!*\
  !*** ./node_modules/formdata-node/lib/esm/fileFromPath.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fileFromPath: () => (/* binding */ fileFromPath),
/* harmony export */   fileFromPathSync: () => (/* binding */ fileFromPathSync),
/* harmony export */   isFile: () => (/* reexport safe */ _isFile_js__WEBPACK_IMPORTED_MODULE_5__.isFile)
/* harmony export */ });
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ "fs");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ "path");
/* harmony import */ var node_domexception__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node-domexception */ "./node_modules/node-domexception/index.js");
/* harmony import */ var _File_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./File.js */ "./node_modules/formdata-node/lib/esm/File.js");
/* harmony import */ var _isPlainObject_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isPlainObject.js */ "./node_modules/formdata-node/lib/esm/isPlainObject.js");
/* harmony import */ var _isFile_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isFile.js */ "./node_modules/formdata-node/lib/esm/isFile.js");
var __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _FileFromPath_path, _FileFromPath_start;






const MESSAGE = "The requested file could not be read, "
    + "typically due to permission problems that have occurred after a reference "
    + "to a file was acquired.";
class FileFromPath {
    constructor(input) {
        _FileFromPath_path.set(this, void 0);
        _FileFromPath_start.set(this, void 0);
        __classPrivateFieldSet(this, _FileFromPath_path, input.path, "f");
        __classPrivateFieldSet(this, _FileFromPath_start, input.start || 0, "f");
        this.name = (0,path__WEBPACK_IMPORTED_MODULE_1__.basename)(__classPrivateFieldGet(this, _FileFromPath_path, "f"));
        this.size = input.size;
        this.lastModified = input.lastModified;
    }
    slice(start, end) {
        return new FileFromPath({
            path: __classPrivateFieldGet(this, _FileFromPath_path, "f"),
            lastModified: this.lastModified,
            size: end - start,
            start
        });
    }
    async *stream() {
        const { mtimeMs } = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.stat(__classPrivateFieldGet(this, _FileFromPath_path, "f"));
        if (mtimeMs > this.lastModified) {
            throw new node_domexception__WEBPACK_IMPORTED_MODULE_2__(MESSAGE, "NotReadableError");
        }
        if (this.size) {
            yield* (0,fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream)(__classPrivateFieldGet(this, _FileFromPath_path, "f"), {
                start: __classPrivateFieldGet(this, _FileFromPath_start, "f"),
                end: __classPrivateFieldGet(this, _FileFromPath_start, "f") + this.size - 1
            });
        }
    }
    get [(_FileFromPath_path = new WeakMap(), _FileFromPath_start = new WeakMap(), Symbol.toStringTag)]() {
        return "File";
    }
}
function createFileFromPath(path, { mtimeMs, size }, filenameOrOptions, options = {}) {
    let filename;
    if ((0,_isPlainObject_js__WEBPACK_IMPORTED_MODULE_4__["default"])(filenameOrOptions)) {
        [options, filename] = [filenameOrOptions, undefined];
    }
    else {
        filename = filenameOrOptions;
    }
    const file = new FileFromPath({ path, size, lastModified: mtimeMs });
    if (!filename) {
        filename = file.name;
    }
    return new _File_js__WEBPACK_IMPORTED_MODULE_3__.File([file], filename, {
        ...options, lastModified: file.lastModified
    });
}
function fileFromPathSync(path, filenameOrOptions, options = {}) {
    const stats = (0,fs__WEBPACK_IMPORTED_MODULE_0__.statSync)(path);
    return createFileFromPath(path, stats, filenameOrOptions, options);
}
async function fileFromPath(path, filenameOrOptions, options) {
    const stats = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.stat(path);
    return createFileFromPath(path, stats, filenameOrOptions, options);
}


/***/ }),

/***/ "./node_modules/formdata-node/lib/esm/isPlainObject.js":
/*!*************************************************************!*\
  !*** ./node_modules/formdata-node/lib/esm/isPlainObject.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const getType = (value) => (Object.prototype.toString.call(value).slice(8, -1).toLowerCase());
function isPlainObject(value) {
    if (getType(value) !== "object") {
        return false;
    }
    const pp = Object.getPrototypeOf(value);
    if (pp === null || pp === undefined) {
        return true;
    }
    const Ctor = pp.constructor && pp.constructor.toString();
    return Ctor === Object.toString();
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isPlainObject);


/***/ })

};
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2Zvcm1kYXRhLW5vZGVfbGliX2VzbV9maWxlRnJvbVBhdGhfanMuYnVuZGxlLmRldi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBLFlBQVksaUJBQWlCLEVBQUUsbUJBQU8sQ0FBQyxzQ0FBZ0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2ZBLDhCQUE4QixTQUFJLElBQUksU0FBSTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLFNBQUksSUFBSSxTQUFJO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0U7QUFDaEM7QUFDYTtBQUNaO0FBQ2M7QUFDbkI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDhDQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsZ0JBQWdCLFVBQVUsUUFBUSx3Q0FBRTtBQUNwQztBQUNBLHNCQUFzQiw4Q0FBWTtBQUNsQztBQUNBO0FBQ0EsbUJBQW1CLG9EQUFnQjtBQUNuQztBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxlQUFlLGlDQUFpQztBQUNwRjtBQUNBLFFBQVEsNkRBQWE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxtQ0FBbUM7QUFDdkU7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwQ0FBSTtBQUNuQjtBQUNBLEtBQUs7QUFDTDtBQUNPLCtEQUErRDtBQUN0RSxrQkFBa0IsNENBQVE7QUFDMUI7QUFDQTtBQUNPO0FBQ1Asd0JBQXdCLHdDQUFFO0FBQzFCO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUM5RUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsYUFBYSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWxlY3Ryb24tcmVhY3QtYm9pbGVycGxhdGUvLi9ub2RlX21vZHVsZXMvbm9kZS1kb21leGNlcHRpb24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vZWxlY3Ryb24tcmVhY3QtYm9pbGVycGxhdGUvLi9ub2RlX21vZHVsZXMvZm9ybWRhdGEtbm9kZS9saWIvZXNtL2ZpbGVGcm9tUGF0aC5qcyIsIndlYnBhY2s6Ly9lbGVjdHJvbi1yZWFjdC1ib2lsZXJwbGF0ZS8uL25vZGVfbW9kdWxlcy9mb3JtZGF0YS1ub2RlL2xpYi9lc20vaXNQbGFpbk9iamVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9kZS1kb21leGNlcHRpb24uIE1JVCBMaWNlbnNlLiBKaW1teSBXw6RydGluZyA8aHR0cHM6Ly9qaW1teS53YXJ0aW5nLnNlL29wZW5zb3VyY2U+ICovXG5cbmlmICghZ2xvYmFsVGhpcy5ET01FeGNlcHRpb24pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IE1lc3NhZ2VDaGFubmVsIH0gPSByZXF1aXJlKCd3b3JrZXJfdGhyZWFkcycpLFxuICAgIHBvcnQgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKS5wb3J0MSxcbiAgICBhYiA9IG5ldyBBcnJheUJ1ZmZlcigpXG4gICAgcG9ydC5wb3N0TWVzc2FnZShhYiwgW2FiLCBhYl0pXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGVyci5jb25zdHJ1Y3Rvci5uYW1lID09PSAnRE9NRXhjZXB0aW9uJyAmJiAoXG4gICAgICBnbG9iYWxUaGlzLkRPTUV4Y2VwdGlvbiA9IGVyci5jb25zdHJ1Y3RvclxuICAgIClcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdsb2JhbFRoaXMuRE9NRXhjZXB0aW9uXG4iLCJ2YXIgX19jbGFzc1ByaXZhdGVGaWVsZFNldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZFNldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJtXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIG1ldGhvZCBpcyBub3Qgd3JpdGFibGVcIik7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIChraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlciwgdmFsdWUpIDogZiA/IGYudmFsdWUgPSB2YWx1ZSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpKSwgdmFsdWU7XG59O1xudmFyIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRHZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn07XG52YXIgX0ZpbGVGcm9tUGF0aF9wYXRoLCBfRmlsZUZyb21QYXRoX3N0YXJ0O1xuaW1wb3J0IHsgc3RhdFN5bmMsIGNyZWF0ZVJlYWRTdHJlYW0sIHByb21pc2VzIGFzIGZzIH0gZnJvbSBcImZzXCI7XG5pbXBvcnQgeyBiYXNlbmFtZSB9IGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgRE9NRXhjZXB0aW9uIGZyb20gXCJub2RlLWRvbWV4Y2VwdGlvblwiO1xuaW1wb3J0IHsgRmlsZSB9IGZyb20gXCIuL0ZpbGUuanNcIjtcbmltcG9ydCBpc1BsYWluT2JqZWN0IGZyb20gXCIuL2lzUGxhaW5PYmplY3QuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2lzRmlsZS5qc1wiO1xuY29uc3QgTUVTU0FHRSA9IFwiVGhlIHJlcXVlc3RlZCBmaWxlIGNvdWxkIG5vdCBiZSByZWFkLCBcIlxuICAgICsgXCJ0eXBpY2FsbHkgZHVlIHRvIHBlcm1pc3Npb24gcHJvYmxlbXMgdGhhdCBoYXZlIG9jY3VycmVkIGFmdGVyIGEgcmVmZXJlbmNlIFwiXG4gICAgKyBcInRvIGEgZmlsZSB3YXMgYWNxdWlyZWQuXCI7XG5jbGFzcyBGaWxlRnJvbVBhdGgge1xuICAgIGNvbnN0cnVjdG9yKGlucHV0KSB7XG4gICAgICAgIF9GaWxlRnJvbVBhdGhfcGF0aC5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX0ZpbGVGcm9tUGF0aF9zdGFydC5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfRmlsZUZyb21QYXRoX3BhdGgsIGlucHV0LnBhdGgsIFwiZlwiKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfRmlsZUZyb21QYXRoX3N0YXJ0LCBpbnB1dC5zdGFydCB8fCAwLCBcImZcIik7XG4gICAgICAgIHRoaXMubmFtZSA9IGJhc2VuYW1lKF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0ZpbGVGcm9tUGF0aF9wYXRoLCBcImZcIikpO1xuICAgICAgICB0aGlzLnNpemUgPSBpbnB1dC5zaXplO1xuICAgICAgICB0aGlzLmxhc3RNb2RpZmllZCA9IGlucHV0Lmxhc3RNb2RpZmllZDtcbiAgICB9XG4gICAgc2xpY2Uoc3RhcnQsIGVuZCkge1xuICAgICAgICByZXR1cm4gbmV3IEZpbGVGcm9tUGF0aCh7XG4gICAgICAgICAgICBwYXRoOiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9GaWxlRnJvbVBhdGhfcGF0aCwgXCJmXCIpLFxuICAgICAgICAgICAgbGFzdE1vZGlmaWVkOiB0aGlzLmxhc3RNb2RpZmllZCxcbiAgICAgICAgICAgIHNpemU6IGVuZCAtIHN0YXJ0LFxuICAgICAgICAgICAgc3RhcnRcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFzeW5jICpzdHJlYW0oKSB7XG4gICAgICAgIGNvbnN0IHsgbXRpbWVNcyB9ID0gYXdhaXQgZnMuc3RhdChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9GaWxlRnJvbVBhdGhfcGF0aCwgXCJmXCIpKTtcbiAgICAgICAgaWYgKG10aW1lTXMgPiB0aGlzLmxhc3RNb2RpZmllZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IERPTUV4Y2VwdGlvbihNRVNTQUdFLCBcIk5vdFJlYWRhYmxlRXJyb3JcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuc2l6ZSkge1xuICAgICAgICAgICAgeWllbGQqIGNyZWF0ZVJlYWRTdHJlYW0oX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfRmlsZUZyb21QYXRoX3BhdGgsIFwiZlwiKSwge1xuICAgICAgICAgICAgICAgIHN0YXJ0OiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9GaWxlRnJvbVBhdGhfc3RhcnQsIFwiZlwiKSxcbiAgICAgICAgICAgICAgICBlbmQ6IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0ZpbGVGcm9tUGF0aF9zdGFydCwgXCJmXCIpICsgdGhpcy5zaXplIC0gMVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IFsoX0ZpbGVGcm9tUGF0aF9wYXRoID0gbmV3IFdlYWtNYXAoKSwgX0ZpbGVGcm9tUGF0aF9zdGFydCA9IG5ldyBXZWFrTWFwKCksIFN5bWJvbC50b1N0cmluZ1RhZyldKCkge1xuICAgICAgICByZXR1cm4gXCJGaWxlXCI7XG4gICAgfVxufVxuZnVuY3Rpb24gY3JlYXRlRmlsZUZyb21QYXRoKHBhdGgsIHsgbXRpbWVNcywgc2l6ZSB9LCBmaWxlbmFtZU9yT3B0aW9ucywgb3B0aW9ucyA9IHt9KSB7XG4gICAgbGV0IGZpbGVuYW1lO1xuICAgIGlmIChpc1BsYWluT2JqZWN0KGZpbGVuYW1lT3JPcHRpb25zKSkge1xuICAgICAgICBbb3B0aW9ucywgZmlsZW5hbWVdID0gW2ZpbGVuYW1lT3JPcHRpb25zLCB1bmRlZmluZWRdO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZmlsZW5hbWUgPSBmaWxlbmFtZU9yT3B0aW9ucztcbiAgICB9XG4gICAgY29uc3QgZmlsZSA9IG5ldyBGaWxlRnJvbVBhdGgoeyBwYXRoLCBzaXplLCBsYXN0TW9kaWZpZWQ6IG10aW1lTXMgfSk7XG4gICAgaWYgKCFmaWxlbmFtZSkge1xuICAgICAgICBmaWxlbmFtZSA9IGZpbGUubmFtZTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBGaWxlKFtmaWxlXSwgZmlsZW5hbWUsIHtcbiAgICAgICAgLi4ub3B0aW9ucywgbGFzdE1vZGlmaWVkOiBmaWxlLmxhc3RNb2RpZmllZFxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbGVGcm9tUGF0aFN5bmMocGF0aCwgZmlsZW5hbWVPck9wdGlvbnMsIG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHN0YXRzID0gc3RhdFN5bmMocGF0aCk7XG4gICAgcmV0dXJuIGNyZWF0ZUZpbGVGcm9tUGF0aChwYXRoLCBzdGF0cywgZmlsZW5hbWVPck9wdGlvbnMsIG9wdGlvbnMpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZpbGVGcm9tUGF0aChwYXRoLCBmaWxlbmFtZU9yT3B0aW9ucywgb3B0aW9ucykge1xuICAgIGNvbnN0IHN0YXRzID0gYXdhaXQgZnMuc3RhdChwYXRoKTtcbiAgICByZXR1cm4gY3JlYXRlRmlsZUZyb21QYXRoKHBhdGgsIHN0YXRzLCBmaWxlbmFtZU9yT3B0aW9ucywgb3B0aW9ucyk7XG59XG4iLCJjb25zdCBnZXRUeXBlID0gKHZhbHVlKSA9PiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKS5zbGljZSg4LCAtMSkudG9Mb3dlckNhc2UoKSk7XG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbHVlKSB7XG4gICAgaWYgKGdldFR5cGUodmFsdWUpICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgcHAgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsdWUpO1xuICAgIGlmIChwcCA9PT0gbnVsbCB8fCBwcCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjb25zdCBDdG9yID0gcHAuY29uc3RydWN0b3IgJiYgcHAuY29uc3RydWN0b3IudG9TdHJpbmcoKTtcbiAgICByZXR1cm4gQ3RvciA9PT0gT2JqZWN0LnRvU3RyaW5nKCk7XG59XG5leHBvcnQgZGVmYXVsdCBpc1BsYWluT2JqZWN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9